name: Codacy Coverage Report

on: ["push"]

jobs:
  codacy-coverage-reporter:
    runs-on: ubuntu-latest
    name: codacy-coverage-reporter
    steps:
      - uses: actions/checkout@v2
      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "coverage-reports"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/coverage-reports.zip', Buffer.from(download.data));
      - run: |
          unzip coverage-reports.zip
          rm coverage-reports.zip
      - name: Set Coverage Report Paths
        id: coverage-paths
        run: |
          readarray -d '' coveragePathArray < <(find . -name "coverage.cobertura.xml" -print0)
          coveragePaths=$(printf ",%s" "${coveragePathArray[@]}")
          echo "::set-output name=COVERAGE_REPORT_PATHS::$coveragePaths"
      - name: Publish Code Coverage Results
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          api-token: ${{ secrets.CODACY_API_TOKEN }}
          coverage-reports: ${{ steps.coverage-paths.outputs.COVERAGE_REPORT_PATHS }}