name: Public Release
on:
  release:
    types:
      - published
jobs:
  build:
    strategy:
      matrix:
        java: [
          16
        ]
        os: [
          ubuntu-latest
        ]
        branch: [
          1.14,
          1.15,
          1.16,
          1.17,
          1.18
        ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Get info from branch to run
        id: getbranchinfo
        run: |
          if ${{ matrix.branch == '1.14'}}; then
            echo "::set-output name=branchname::1.14.4"
          elif ${{ matrix.branch == '1.15'}}; then
            echo "::set-output name=branchname::1.15.2"
          elif ${{ matrix.branch == '1.16'}}; then
            echo "::set-output name=branchname::1.16.5"
          elif ${{ matrix.branch == '1.17'}}; then
            echo "::set-output name=branchname::1.17.1"
          elif ${{ matrix.branch == '1.18'}}; then
            echo "::set-output name=branchname::1.18"
          fi
      - name: Checkout the sources
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.getbranchinfo.outputs.branchname }}
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Set build number in codes
        run: |
          sed -i "s/build.undefined/build.$GITHUB_RUN_NUMBER/g" gradle.properties
          sed -i "s/build.undefined/build.$GITHUB_RUN_NUMBER/g" src/main/java/top/catowncraft/CarpetTCTCAddition/Reference.java
          sed -i "s/Version Exception/Public Release/g" src/main/java/top/catowncraft/CarpetTCTCAddition/Reference.java
      - name: Read relevant fields from gradle.properties
        id: properties
        run: |
          path='./gradle.properties'
          for property in mod_file_name mod_version_detail mod_file_name minecraft_version_out cruseforge_gameversion cruseforge_relations cruseforge_release cruseforge_release_type
          do
            result=$(sed -n "/^[[:space:]]*$property[[:space:]]*=[[:space:]]*/s/^[[:space:]]*$property[[:space:]]*=[[:space:]]*//p" "$path")
            echo "$property: $result"
            echo ::set-output name=$property::"$result"
          done
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Find correct JAR
        id: findjar
        run: |
          output="$(find build/libs/ ! -name "*-dev.jar" ! -name "*-sources.jar" -type f -printf "%f\n")"
          echo "::set-output name=jarname::$output"
      - name: Upload assets to GitHub Action
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.properties.outputs.mod_file_name }}-mc${{ steps.properties.outputs.minecraft_version_out }}-${{ steps.properties.outputs.mod_version_detail }}(Public Release)
          path: build/libs/
      - name: Upload assets to GitHub Release
        uses: AButler/upload-release-assets@v2.0
        with:
          files: 'build/libs/${{ steps.findjar.outputs.jarname }}'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload assets to Curseforge
        if: ${{ steps.properties.outputs.cruseforge_release }}
        uses: itsmeow/curseforge-upload@v3
        with:
          token: ${{ secrets.CF_API_TOKEN }}
          project_id: 513524
          game_endpoint: minecraft
          file_path: build/libs/${{ steps.findjar.outputs.jarname }}
          changelog_type: markdown
          changelog: ${{ github.event.release.body }}
          game_versions: ${{ steps.properties.outputs.cruseforge_gameversion }}
          release_type: ${{ steps.properties.outputs.cruseforge_release_type }}
          relations: ${{ steps.properties.outputs.cruseforge_relations }}